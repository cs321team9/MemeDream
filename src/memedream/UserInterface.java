/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memedream;

import javax.swing.filechooser.FileFilter;
import java.util.ArrayList;
import memedream.CustomImage;
import memedream.Message;
import memedream.Model;
import memedream.Observer;
import memedream.Tag;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Willi
 */
public class UserInterface extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form UserInterface
     */
    public UserInterface(Model mod) {
        initComponents();
        customInitComponents();
        
        
        java.awt.GridLayout tagLayout = new java.awt.GridLayout(0,1,5,5);
        tagPanel.setLayout(tagLayout);
        model = mod;
        tagList = new ArrayList<>();
        imagesToDraw = new ArrayList<>();
        allTags = new ArrayList<>();
    }

    private void customInitComponents()
    {
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Only jpg and png supported", "jpg", "png");
        imageChooserWindow.setFileFilter(fileFilter);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addImageDialogue = new javax.swing.JDialog();
        titleInputField = new javax.swing.JTextField();
        tagsInputField = new javax.swing.JTextField();
        ratingSlideBar = new javax.swing.JSlider();
        filepathInputField = new javax.swing.JTextField();
        openFileChooserButton = new javax.swing.JButton();
        addImageFinalizeButton = new javax.swing.JButton();
        imageNameLabel = new javax.swing.JLabel();
        tagsLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        filePathNameLabel = new javax.swing.JLabel();
        imageChooserWindow = new javax.swing.JFileChooser();
        searchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        galleryView = new GalleryView();
        updateButton = new javax.swing.JButton();
        tagScroller = new javax.swing.JScrollPane();
        tagPanel = new javax.swing.JPanel();

        addImageDialogue.setBounds(new java.awt.Rectangle(200, 200, 400, 350));
        addImageDialogue.setModal(true);
        addImageDialogue.setResizable(false);

        titleInputField.setText("Funny Name");
        titleInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleInputFieldActionPerformed(evt);
            }
        });

        tagsInputField.setText("tag1, tag2, tag3, tag4");

        ratingSlideBar.setMajorTickSpacing(1);
        ratingSlideBar.setMaximum(5);
        ratingSlideBar.setMinimum(1);
        ratingSlideBar.setPaintLabels(true);
        ratingSlideBar.setPaintTicks(true);
        ratingSlideBar.setSnapToTicks(true);
        ratingSlideBar.setValue(3);

        filepathInputField.setToolTipText("This will show the filepath of your image. Use the browse button to select your file.");

        openFileChooserButton.setText("Browse");
        openFileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileChooserButtonActionPerformed(evt);
            }
        });

        addImageFinalizeButton.setText("Add Image");
        addImageFinalizeButton.setEnabled(false);

        imageNameLabel.setText("Image Name:");

        tagsLabel.setText("Tags:");

        ratingLabel.setText("Rating");

        filePathNameLabel.setText("File Path");

        javax.swing.GroupLayout addImageDialogueLayout = new javax.swing.GroupLayout(addImageDialogue.getContentPane());
        addImageDialogue.getContentPane().setLayout(addImageDialogueLayout);
        addImageDialogueLayout.setHorizontalGroup(
            addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addImageDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addImageDialogueLayout.createSequentialGroup()
                        .addComponent(ratingSlideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addImageDialogueLayout.createSequentialGroup()
                        .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filepathInputField)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addImageDialogueLayout.createSequentialGroup()
                                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(addImageDialogueLayout.createSequentialGroup()
                                        .addComponent(tagsLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tagsInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addImageDialogueLayout.createSequentialGroup()
                                        .addComponent(imageNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(titleInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 12, Short.MAX_VALUE)))
                        .addGap(9, 9, 9)
                        .addComponent(openFileChooserButton)
                        .addGap(12, 12, 12))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addImageDialogueLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ratingLabel)
                .addGap(182, 182, 182))
            .addGroup(addImageDialogueLayout.createSequentialGroup()
                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addImageDialogueLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(filePathNameLabel))
                    .addGroup(addImageDialogueLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(addImageFinalizeButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addImageDialogueLayout.setVerticalGroup(
            addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addImageDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filePathNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filepathInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openFileChooserButton))
                .addGap(43, 43, 43)
                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addImageDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagsInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagsLabel))
                .addGap(22, 22, 22)
                .addComponent(ratingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ratingSlideBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addImageFinalizeButton)
                .addGap(23, 23, 23))
        );

        imageChooserWindow.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchBar.setToolTipText("");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateButton.setText("update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        tagScroller.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout tagPanelLayout = new javax.swing.GroupLayout(tagPanel);
        tagPanel.setLayout(tagPanelLayout);
        tagPanelLayout.setHorizontalGroup(
            tagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );
        tagPanelLayout.setVerticalGroup(
            tagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 631, Short.MAX_VALUE)
        );

        tagScroller.setViewportView(tagPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tagScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(galleryView, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchBar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)
                                .addGap(20, 20, 20)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(galleryView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21)
                        .addComponent(updateButton)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tagScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateView();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        search(searchBar.getText());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void openFileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileChooserButtonActionPerformed
        imageChooserWindow.showOpenDialog(this); 
    }//GEN-LAST:event_openFileChooserButtonActionPerformed

    private void titleInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleInputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleInputFieldActionPerformed

    /**
     * @param args the command line arguments
     */

    
    private void updateThumbList() {
        clearThumbs();
        imagesToDraw.forEach((n)->{
            //System.out.println("name: "+ n.getName());
            addThumb(n);
        });
        updateView();
    }
    // "removes" the labels
    // should be replaced by removeImage
    public void removeThumb(){
        if(thumbCount >= 1){
            thumbCount--;
            Thumbnail del = galleryView.labels.get(galleryView.labels.size()-1);
            galleryView.labels.remove(del);
            galleryView.update();
        }
    }
    
    public void removeThumb(CustomImage selectedImage){
        //galleryView.labels.remove();
    }
    private void search(String str){
        
        searchString = str;
        model.update(tagList, searchString);
    }
    // "adds" labels
    // is addImage
    public void addThumb(CustomImage image) {
        thumbCount++;
        galleryView.labels.add(new Thumbnail(image));
        galleryView.update();
        System.out.println("name" + image.getName());
    }
    
    public void clearThumbs(){
        for(int i = galleryView.labels.size(); i>0; i-- ){
            removeThumb();
            System.out.println("removing");
        }
        galleryView.update();
    }
    
    private void updateTagList() {
        tagPanel.removeAll();
        allTags.forEach((n)->{
            TagButton tagButton = new TagButton(n);
            tagPanel.add(tagButton);
            tagButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tagButtonActionPerformed(evt, n.getTagName());
                }
            });
        });
        System.out.println("wee");
        tagPanel.revalidate();
        tagPanel.repaint();
        tagPanel.updateUI();
    }
    
    private void tagButtonActionPerformed(java.awt.event.ActionEvent evt, String str){
        
        javax.swing.AbstractButton abstractButton = (javax.swing.AbstractButton)evt.getSource();
        
        if(abstractButton.isSelected()){
            //System.out.println(abstractButton.getName());
            tagList.add(abstractButton.getName());
        }
        else {
            tagList.remove(abstractButton.getName());
        }
        
        model.update(tagList, searchString);
        galleryView.update();
    }
    
    private void updateView() {
        galleryView.update();
    }
    
    /**
     *
     * @param msg
     */
    @Override
    public void update(Message msg) {
        imagesToDraw = msg.getFilteredImages();
        
        if(allTags != msg.getTags())
        {
            allTags = msg.getTags();
            updateTagList();
        }
        allTags = msg.getTags();
        updateThumbList();
    }
    /*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addImageDialogue;
    private javax.swing.JButton addImageFinalizeButton;
    private javax.swing.JLabel filePathNameLabel;
    private javax.swing.JTextField filepathInputField;
    private org.netbeans.modules.form.InvalidComponent galleryView;
    private javax.swing.JFileChooser imageChooserWindow;
    private javax.swing.JLabel imageNameLabel;
    private javax.swing.JButton openFileChooserButton;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JSlider ratingSlideBar;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel tagPanel;
    private javax.swing.JScrollPane tagScroller;
    private javax.swing.JTextField tagsInputField;
    private javax.swing.JLabel tagsLabel;
    private javax.swing.JTextField titleInputField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
    */
    
    public void openAddImageDialogue()
    {
        addImageDialogue.show();
    }
    
    private javax.swing.JDialog addImageDialogue;
    private javax.swing.JButton addImageFinalizeButton;
    private javax.swing.JLabel filePathNameLabel;
    private javax.swing.JTextField filepathInputField;
    private GalleryView galleryView;
    private javax.swing.JFileChooser imageChooserWindow;
    private javax.swing.JLabel imageNameLabel;
    private javax.swing.JButton openFileChooserButton;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JSlider ratingSlideBar;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel tagPanel;
    private javax.swing.JScrollPane tagScroller;
    private javax.swing.JTextField tagsInputField;
    private javax.swing.JLabel tagsLabel;
    private javax.swing.JTextField titleInputField;
    private javax.swing.JButton updateButton;
    // End of variables declaration          
    
    private String searchString;
    ArrayList<CustomImage> imagesToDraw;
    ArrayList<Tag> allTags;
    ArrayList<String> tagList;
    Model model;
    int thumbCount = 0;
}
